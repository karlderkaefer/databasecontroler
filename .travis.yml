sudo: true

services:
  - docker

language: go

# You don't need to test on very old version of the Go compiler. It's the user's
# responsibility to keep their compilers up to date.
go:
  - 1.11.x

env:
  - GO111MODULE=on

# Skip the install step. Don't `go get` dependencies. Only build with the code
# in vendor/
install: true

# Don't email me the results of the test runs.
notifications:
  email: false

# Anything in before_script that returns a nonzero exit code will flunk the
# build and immediately stop. It's sorta like having set -e enabled in bash.
# Make sure golangci-lint is vendored.
before_script:
  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.13.2
  - sudo /etc/init.d/mysql stop
  - docker run --rm -d -p 3306:3306 -e MYSQL_DATABASE=seed -e MYSQL_ROOT_PASSWORD=HelloApes66 mysql:5.7

# script always runs to completion (set +e). If we have linter issues AND a
# failing test, we want to see both. Configure golangci-lint with a
# .golangci.yml file at the top level of your repo.
script:
  # Run all the tests with the race detector enabled
  # use short test mode to exclude oracle tests
  - go test -v -race -short -coverprofile=coverage.txt -covermode=atomic ./...
  # run a bunch of code checkers/linters in parallel
  - golangci-lint run

after_success:
  - bash <(curl -s https://codecov.io/bash)